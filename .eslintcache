[{"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/index.js":"1","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/App.js":"2","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signup.js":"3","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signin.js":"4","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/intro.js":"5","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/result.js":"6","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/share.js":"7","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mypage.js":"8","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main.js":"9","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/openning.js":"10","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mymenu.js":"11","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-header.js":"12","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-chef.js":"13","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-ingredients.js":"14","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/myinfo.js":"15"},{"size":474,"mtime":1608795486578,"results":"16","hashOfConfig":"17"},{"size":4099,"mtime":1609341849483,"results":"18","hashOfConfig":"17"},{"size":3658,"mtime":1609230911542,"results":"19","hashOfConfig":"17"},{"size":4784,"mtime":1609333298129,"results":"20","hashOfConfig":"17"},{"size":299,"mtime":1609120531551,"results":"21","hashOfConfig":"17"},{"size":2162,"mtime":1609347343600,"results":"22","hashOfConfig":"17"},{"size":1999,"mtime":1609227923063,"results":"23","hashOfConfig":"17"},{"size":3723,"mtime":1609342644099,"results":"24","hashOfConfig":"17"},{"size":4197,"mtime":1609348023358,"results":"25","hashOfConfig":"17"},{"size":2310,"mtime":1609339958482,"results":"26","hashOfConfig":"17"},{"size":1421,"mtime":1609337146241,"results":"27","hashOfConfig":"17"},{"size":498,"mtime":1609120531554,"results":"28","hashOfConfig":"17"},{"size":455,"mtime":1609120531553,"results":"29","hashOfConfig":"17"},{"size":3084,"mtime":1609248885755,"results":"30","hashOfConfig":"17"},{"size":4600,"mtime":1609337792819,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xqe7w6",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/index.js",[],["70","71"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/App.js",["72","73"],"import { Component } from 'react';\nimport './App.css';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport Intro from \"./components/main/intro\"\nimport Signin from \"./components/user/signin\"\nimport Signup from \"./components/user/signup\"\nimport Main from \"./components/main/main\"\nimport Openning from \"./components/main/openning\"\nimport Result from \"./components/user/result\"\nimport Mypage from \"./components/user/mypage\"\nimport Share from \"./components/user/share\"\nimport axios from \"axios\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLogin: false,\n      isIntro: true,\n      isOpenning: true,\n      accessToken: null\n    }\n    this.handleIntroClicked = this.handleIntroClicked.bind(this);\n    this.handleOpenningClicked = this.handleOpenningClicked.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.isLoginSetUp = this.isLoginSetUp.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.githubLogout = this.githubLogout.bind(this);\n  }\n  /** 세션 유지 코드 **/\n  /*\n  componentDidMount(prevProps, prevState) {\n    if(localStorage.getItem('userInfo')) {\n      this.setState({ isLogin: true });\n    }\n    else {\n      this.setState({ isLogin: false });\n    }\n  }\n  */\n \n  async getAccessToken(authorizationCode) {\n    const result = await axios.post(\"https://onemeal.site/socials/githubLogin\",{authorizationCode} )\n    console.log(result);\n    if(result) {\n      this.setState({\n        isLogin :true,\n        accessToken: result.data.accessToken\n      })\n      let response = await axios.get('https://api.github.com/user', {\n      headers: { authorization: `token ${result.data.accessToken}` }\n      })\n      console.log(response);\n      let userInfo = {id: response.data.node_id, username: response.data.name, userImg: response.data.avatar_url, email: response.data.email};\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\n      console.log(JSON.stringify(userInfo) + '가 스토리지에 저장!')\n    }\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href)\n    const authorizationCode = url.searchParams.get('code')\n    console.log(authorizationCode)\n    if (authorizationCode) {\n      this.getAccessToken(authorizationCode)\n    }\n  }\n\n  githubLogout() {\n    localStorage.clear();\n    this.setState({ accessToken: null })\n  }\n\n  handleLogin() {\n    this.setState({ isLogin: !this.state.isLogin });\n  }\n\n  isLoginSetUp() {\n    this.setState({ isLogin: false });\n  }\n\n  handleIntroClicked = () => {\n    this.setState({\n      isIntro: false\n    })\n    this.props.history.push(\"/\")\n  }\n\n  handleOpenningClicked = () => {\n    this.setState({\n      isOpenning: false\n    })\n    this.props.history.push(\"/\")\n  }\n \n  render() {\n    const {isOpenning, isIntro, isLogin, accessToken} = this.state;\n    return (\n      <div className=\"App\" >\n        <Switch>\n          <Route exact path='/main' render={() => <Main isLogin={isLogin} handleLogin={this.handleLogin}/>} />\n          <Route exact path='/mypage' render ={()=> <Mypage isLogin={isLogin} handleLogin={this.handleLogin} accessToken={accessToken} githubLogout={this.githubLogout}/>}/>\n          <Route exact path='/intro' render={() => <Intro handleIntroClicked={this.handleIntroClicked} />} />\n          <Route exact path='/signin' render = {() => <Signin />} />\n          <Route exact path='/signup' render = {() => <Signup />} />\n          <Route exact path='/openning' render = {() => <Openning isOpenning={isOpenning} isLoginSetUp={this.isLoginSetUp} handleOpenningClicked={this.handleOpenningClicked} />} />\n          <Route\n          path = '/'\n          render = {() => {\n            if(!isIntro && isOpenning) {\n              return <Redirect to = '/openning' />\n            }\n            else if(!isIntro && !isOpenning) {\n              return <Redirect to = '/main' />\n            }\n            else {\n              return <Redirect to = '/intro' />\n            }\n          }}\n          />\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signup.js",["74","75","76"],"import React, { Component } from 'react'\nimport logo from './img2/logo.png'\nimport x from './img2/X.png'\nimport {Link , withRouter} from 'react-router-dom'\nimport axios from 'axios'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      userName: \"\",\n      password: \"\",\n      checkPassword: \"\",\n      errorMessage: \"\"\n    }\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.signupRequestHandler = this.signupRequestHandler.bind(this);\n  }\n\n  handleInputValue(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  signupRequestHandler() {\n    const {email, username, password, checkPassword} = this.state;\n    if(!email || !username || !password || !checkPassword) {\n      this.setState({ errorMessage: '모든 항목을 입력해주세요' });\n    }\n    else {\n      /*\n      axios({\n        method: 'POST',\n        url: 'https://onemeal.site/users/signup',\n        headers: { 'Content-Type': 'application/json' },\n        withCredentials: true,\n        data: { email: email, username: username, password: password }\n      })\n      .then(res => {\n        console.log(res.data);\n        this.props.handleSignupView();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      */\n      fetch('https://onemeal.site/users/signup', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',\n      body: JSON.stringify({ email: email, username: username, password: password })\n      })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res.data);\n        this.props.handleSignupView();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"back\">\n        <div className='loginContainer'>\n        <img className='X' src={x} onClick={this.props.loginModalHandler}/>\n          <div className=\"middleContainer\">\n            <img className=\"go\" src={logo} alt=\"go\" />\n            <input\n              className=\"inputBox\"\n              name='email'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='이메일'\n              type='text' />\n            <div className='block' />\n            <input\n              className=\"inputBox\"\n              name='username'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='이름'\n              type='text' />\n            <div className='block' />\n            <input\n              className=\"inputBox\"\n              name='password'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='비밀번호'\n              type='password' />\n            <div className='block' />\n            <input\n              className=\"inputBox\"\n              name='checkPassword'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='비밀번호 확인'\n              type='password' />\n            <div className='block' />\n            <button className=\"button\" onClick={this.signupRequestHandler}>회원가입</button>\n            <div className='block' />\n            <div className=\"alert-box\">{this.state.errorMessage}</div>\n            <div className='block' />\n            <span className=\"text\">\n              아이디가 있으신가요?\n              <span className=\"text2\" onClick={this.props.handleSignupView}>로그인</span>\n            </span>\n            <div className='block' />\n          </div>\n          <div className=\"ex\">2021 Baegopujo all rights reserved.</div>\n        </div>\n      </div >\n    )\n  }\n}\n\n\nexport default withRouter(Signup)","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signin.js",["77","78","79","80","81"],"import React, { Component } from 'react'\nimport logo from './img2/logo.png'\nimport github from './img2/github.png'\nimport google from './img2/google.png'\nimport { Link, withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport x from './img2/X.png'\nimport Signup from './signup'\nimport { GoogleLogin } from \"react-google-login\"\nrequire('dotenv').config(); \n\nclass Signin extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      showSignupView: false,\n      errorMessage: \"\",\n      googleId: \"\"\n    };\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.loginRequestHandler = this.loginRequestHandler.bind(this);\n    this.handleSignupView = this.handleSignupView.bind(this);\n    this.socialLoginHandler = this.githubLoginHandler.bind(this);\n    this.getUserInfo = this.getUserInfo.bind(this);\n  }\n\n  async githubLoginHandler() {\n    let GITHUB_LOGIN_URL = `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}`\n    window.location.assign(GITHUB_LOGIN_URL)\n  }\n\n  handleInputValue(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  \n  handleSignupView() {\n    this.setState({ showSignupView: !this.state.showSignupView });\n  }\n\n\n  async loginRequestHandler() {\n    const { email, password } = this.state;\n\n    if (email === \"\" || password === \"\") {\n      this.setState({\n        errorMessage: \"모든항목을 입력해주세요\"\n      })\n    }\n    else {\n      /*\n      let result = await axios.post(\"https://onemeal.site/users/login\",{email: email , password : password},{headers: { 'Content-Type': 'application/json'} ,withCredentials: true})\n      console.log(result)\n      this.props.loginHandler(result.data.data.username)\n      */\n     fetch('https://onemeal.site/users/login', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',\n      body: JSON.stringify({email: email , password : password})\n      })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res.data);\n        this.getUserInfo();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n\n  /* 유저인포 불러오는 함수 */\n  getUserInfo() {\n    /*\n    let result = await axios.get(\"https://onemeal.site/users/userinfo\" , {withCredentials: true});\n    console.log(result);\n    console.log('와! 성공!');\n    */\n    fetch('https://onemeal.site/users/userinfo', {\n    method: 'get',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include'\n    })\n    .then(res => res.json())\n    .then(res => {\n      localStorage.setItem('userInfo', JSON.stringify(res.data));\n      this.props.loginHandler(res.data.username);\n      console.log(res.data);\n      console.log('와! 성공!');\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  render() {\n\n    const responseGoogle = (any) => {\n\n    }\n    return (\n      this.state.showSignupView ?\n        <Signup handleSignupView={this.handleSignupView} loginModalHandler={this.props.loginModalHandler} /> :\n        <div className=\"back\">\n          <div className='loginContainer'>\n            <img className='X' src={x} onClick={this.props.loginModalHandler} />\n            <div className=\"middleContainer\">\n              <img className=\"go\" src={logo} alt=\"go\" />\n              <div className='block1' />\n              <input\n                className=\"inputBox\"\n                name='email'\n                onChange={(e) => this.handleInputValue(e)}\n                placeholder='이메일'\n                type='text' />\n              <div className='block' />\n              <input\n                className=\"inputBox\"\n                name='password'\n                onChange={(e) => this.handleInputValue(e)}\n                placeholder='비밀번호'\n                type='password' />\n              <div className='block' />\n              <button className=\"button\" onClick={this.loginRequestHandler}>로그인</button>\n              <div className='block' />\n              <div className=\"alert-box\">{this.state.errorMessage}</div>\n              <div className='block' />\n              <span className=\"text\">\n                아직 아이디가 없으신가요?\n              <span className='text2' onClick={this.handleSignupView}>회원가입</span>\n              </span>\n              <div className='block' />\n              <div>\n                <img className=\"github\" src={github} alt=\"github\" onClick={this.githubLoginHandler} />  <img className=\"google\" src={google} alt=\"google\" />\n              </div>\n            </div>\n            <div className=\"ex\">2021 Baegopujo all rights reserved.</div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withRouter(Signin)","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/intro.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/result.js",["82","83","84","85"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/share.js",["86","87","88"],"import React, { Component } from 'react'\nimport kakao from './img2/kakao.png'\nimport x from './img2/X.png'\nimport { Link, withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nclass Share extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            foodName: \"\",\n            foodImg: \"\"\n\n        }\n        this.signupRequestHandler = this.signupRequestHandler.bind(this);\n    }\n\n  \n\n    async signupRequestHandler() {\n        let result = await axios.get(\"https://onemeal.site/resultrecipe\",{ foodName: this.foodName, foodImg: this.foodImg },{headers: { 'Content-Type': 'application/json'} ,withCredentials: true})\n\n\n        // axios({\n        //     method: 'GET',\n        //     url: 'https://onemeal.site/resultrecipe',\n        //     headers: { 'Content-Type': 'application/json' },\n        //     withCredentials: true,\n        //     data: { foodName: this.foodName, foodImg: this.foodImg }\n        // })\n        //     .then(res => {\n        //         console.log(res.data);\n        //     })\n        //     .catch(err => {\n        //         console.log(err);\n        //     })\n    }\n\n\n    render() {\n        return (\n            <div className=\"back\">\n                <div className='loginContainer'>\n                    <img className='X' src={x} onClick={this.props.loginModalHandler} />\n                    <div className=\"middleContainer\">\n                        <div className=\"title\">셰프의 선택은</div>\n                        <div className=\"resultName\">계란 볶음밥</div>\n                        <div className=\"resultImg\" />\n                        <div className=\"text\">친구들에게 <span className=\"text1\">고독한 한끼</span>를 소개해보세요!</div>\n                        <div className='block' />\n                        <img className='kakao' src={kakao} alt='kakao'/>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\n\nexport default withRouter(Share)\n\n\n      ","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mypage.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main.js",["89"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/openning.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mymenu.js",["90","91"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport { render } from '@testing-library/react';\n\nfunction Recomend() {\n  return (\n    <div className=\"saveResult\">\n      <div className=\"saveresultImg\"></div>\n      <div className=\"saveresultEx\">\n        <div className=\"explainName\">계란볶음밥</div>\n        <div className=\"block\"></div>\n        <div className=\"explainData\">2020-12-15</div>\n      </div>\n    </div>\n  )\n}\n\nclass MyMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    /*\n    fetch('https://onemeal.site/users/userinfoup', {\n      method: 'put',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',\n      body: JSON.stringify({ username: newUsername })\n    })\n    .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      this.props.getUserInfo();\n      alert('업로드 성공!');\n    })\n    .catch(err => {\n      console.log(err);\n      alert('업로드 실패..');\n    })\n    */\n  }\n\n  render() {\n    return (\n      <div className='my-menu-wrap'>\n        <div className=\"menuInt\">추천받은 음식</div>\n        <div className=\"block\" />\n        < div className=\"saveResultbox\" >\n          <Recomend /><Recomend /><Recomend /><Recomend /><Recomend /><Recomend /><Recomend /><Recomend />\n        </div >\n      </div>\n    );\n  }\n}\n\nexport default MyMenu;","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-header.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-chef.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-ingredients.js",[],["92","93"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/myinfo.js",["94"],"import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass MyInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedUserImg: null,\n      newUsername: null,\n      newPassword: null,\n      password2: null\n    };\n    this.handleImgChange = this.handleImgChange.bind(this);\n    this.handleImgClick = this.handleImgClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleNameClick = this.handleNameClick.bind(this);\n    this.handleAnyThing = this.handleAnyThing.bind(this);\n  }\n\n  /* 로컬에서 선택한 이미지 스테이트에 담아두는 핸들링 함수 */\n  handleImgChange(e) {\n    let target = e.target.files[0];\n    console.log(target);\n    this.setState({ selectedUserImg: target })\n  }\n\n  /* 이름, 비밀번호 온체인지 핸들링 함수 */\n  handleAnyThing(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  /* 서버에 이미지 업데이트 함수 */\n  handleImgClick() {\n    const formData = new FormData();\n    formData.append('img', this.state.selectedUserImg);\n    for (let key of formData.entries()) {\n      console.log(key[0] + ', ' + key[1]);\n    }\n    axios.put('https://onemeal.site/users/userimgup', formData, {withCredentials: true})\n    .then(res => {\n      console.log(res);\n      alert('업로드 성공!');\n      this.props.getUserInfo();\n      this.props.history.push(\"/mypage\");\n    })\n    .catch(err => {\n      console.log(err);\n      alert('업로드 실패!')\n    })\n  }\n\n  /* 서버에 이름 업데이트 함수 */\n  handleNameClick() {\n    const {newUsername} = this.state;\n    return fetch('https://onemeal.site/users/userinfoup', {\n      method: 'put',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',\n      body: JSON.stringify({ username: newUsername })\n      })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        this.props.getUserInfo();\n        alert('업로드 성공!');\n      })\n      .catch(err => {\n        console.log(err);\n        alert('업로드 실패..');\n      })\n  }\n\n  /* 서버에 비밀번호 업데이트 함수 */\n  handlePasswordClick() {\n    const {newPassword, password2} = this.state;\n    if(newPassword === password2) {\n      const {newUsername} = this.state;\n      return fetch('https://onemeal.site/users/userinfoup', {\n      method: 'put',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',\n      body: JSON.stringify({ username: newPassword })\n      })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        this.props.getUserInfo();\n        alert('업로드 성공!');\n        this.props.history.push(\"/mypage\");\n      })\n      .catch(err => {\n        console.log(err);\n        alert('업로드 실패..');\n      })\n    }\n    else {\n      alert('비밀번호를 확인 해 주세요')\n    }\n  }\n\n  render() {\n    const {userInfo} = this.props;\n    return(\n      <aside className='my-info-container'>\n        <div className='my-pic'>\n          <img src={userInfo.userImg ? userInfo.userImg : undefined} alt='' />\n          <input className='my-pic-upload' name='img' type='file' onChange={(e) => this.handleImgChange(e)}></input>\n        </div>\n        <button className='btn-pic' onClick={this.handleImgClick}>변경</button>\n        <div className='my-name'>\n          <h1 className='my-info-list'>사용자 이름</h1>\n          <input type='text' className='my-name-disc' name='newUsername' defaultValue={userInfo.username} onChange={(e) => this.handleAnyThing(e)}></input>\n        </div>\n        <button className='btn' onClick={this.handleNameClick}>변경</button>\n        <div className='my-email'>\n          <h1 className='my-info-list'>E-mail</h1>\n          <div className='my-email-disc'>{userInfo.email}</div>\n        </div>\n        <div className='my-password'>\n          <h1 className='my-info-list'>비밀번호</h1>\n          <input type='password' name='newPassword' placeholder='변경할 비밀번호를 입력하세요.'className='my-password-disc' onChange={(e) => this.handleAnyThing(e)}></input>\n        </div>\n        <div className='my-password'>\n          <h1 className='my-info-list'>비밀번호 확인</h1>\n          <input type='password' name='password2' placeholder='비밀번호를 다시 입력하세요.'className='my-password-disc' onChange={(e) => this.handleAnyThing(e)}></input>\n        </div>\n        <button className='btn' onClick={this.handlePasswordClick}>변경</button>\n      </aside>\n    );\n  }\n}\n\nexport default MyInfo;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":13},{"ruleId":"99","severity":1,"message":"104","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":13},{"ruleId":"99","severity":1,"message":"105","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":69,"column":9,"nodeType":"108","endLine":69,"endColumn":76},{"ruleId":"99","severity":1,"message":"104","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":14},{"ruleId":"99","severity":1,"message":"105","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":13},{"ruleId":"99","severity":1,"message":"109","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":21},{"ruleId":"99","severity":1,"message":"110","line":100,"column":11,"nodeType":"101","messageId":"102","endLine":100,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":108,"column":13,"nodeType":"108","endLine":108,"endColumn":81},{"ruleId":"99","severity":1,"message":"111","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"105","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"112","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":43,"column":21,"nodeType":"108","endLine":43,"endColumn":90},{"ruleId":"99","severity":1,"message":"104","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"113","line":21,"column":13,"nodeType":"101","messageId":"102","endLine":21,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":44,"column":21,"nodeType":"108","endLine":44,"endColumn":89},{"ruleId":"99","severity":1,"message":"105","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"105","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"114","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":16},{"ruleId":"95","replacedBy":"115"},{"ruleId":"97","replacedBy":"116"},{"ruleId":"99","severity":1,"message":"117","line":77,"column":14,"nodeType":"101","messageId":"102","endLine":77,"endColumn":25},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Result' is defined but never used.","Identifier","unusedVar","'Share' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GoogleLogin' is defined but never used.","'responseGoogle' is assigned a value but never used.","'Signin' is defined but never used.","'mypage' is defined but never used.","'result' is assigned a value but never used.","'render' is defined but never used.",["118"],["119"],"'newUsername' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]