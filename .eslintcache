[{"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/index.js":"1","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/App.js":"2","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/Signin.js":"3","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/Intro.js":"4","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/Signup.js":"5","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signin.js":"6","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/intro.js":"7","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signup.js":"8","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main.js":"9","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-ingredients.js":"10","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-header.js":"11","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-chef.js":"12","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/openning.js":"13","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/result.js":"14","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mypage.js":"15","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/myinfo.js":"16","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mymenu.js":"17"},{"size":474,"mtime":1608795486578,"results":"18","hashOfConfig":"19"},{"size":2149,"mtime":1609124113704,"results":"20","hashOfConfig":"19"},{"size":2670,"mtime":1608795486577,"results":"21","hashOfConfig":"22"},{"size":376,"mtime":1608795486564,"results":"23","hashOfConfig":"22"},{"size":3455,"mtime":1608795486577,"results":"24","hashOfConfig":"22"},{"size":3826,"mtime":1609133619917,"results":"25","hashOfConfig":"19"},{"size":299,"mtime":1609120531551,"results":"26","hashOfConfig":"19"},{"size":3200,"mtime":1609120531563,"results":"27","hashOfConfig":"19"},{"size":2571,"mtime":1609120531557,"results":"28","hashOfConfig":"19"},{"size":2636,"mtime":1609120531555,"results":"29","hashOfConfig":"19"},{"size":498,"mtime":1609120531554,"results":"30","hashOfConfig":"19"},{"size":455,"mtime":1609120531553,"results":"31","hashOfConfig":"19"},{"size":2289,"mtime":1609120531558,"results":"32","hashOfConfig":"19"},{"size":1671,"mtime":1609120531561,"results":"33","hashOfConfig":"19"},{"size":1908,"mtime":1609133669025,"results":"34","hashOfConfig":"19"},{"size":344,"mtime":1609132135191,"results":"35","hashOfConfig":"19"},{"size":253,"mtime":1609124877052,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1al7g3d",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q14dx0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/index.js",[],["78","79"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/App.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/Signin.js",["80"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/Intro.js",["81"],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/Signup.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signin.js",["82","83","84","85"],"import React, { Component } from 'react'\nimport logo from './img2/logo.png'\nimport github from './img2/github.png'\nimport google from './img2/google.png'\nimport { Link, withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport x from './img2/X.png'\nimport Signup from './signup'\nimport { GoogleLogin } from \"react-google-login\"\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      showSignupView: false,\n      errorMessage: \"\",\n      googleId: \"\"\n    };\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.loginRequestHandler = this.loginRequestHandler.bind(this);\n    this.handleSignupView = this.handleSignupView.bind(this);\n    this.socialLoginHandler = this.githubLoginHandler.bind(this);\n\n  }\n\n  async githubLoginHandler() {\n    let result = await axios.get(\"https://onemeal.site/githubLogin\", { withCredentials: true })\n    let GITHUB_LOGIN_URL = `https://github.com/login/oauth/authorize?client_id=${result.client_id}`\n    window.location.assign(GITHUB_LOGIN_URL)\n  }\n\n\n\n  handleInputValue(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSignupView() {\n    this.setState({ showSignupView: !this.state.showSignupView });\n  }\n\n\n  loginRequestHandler() {\n    const { email, password } = this.state;\n\n    if (email === \"\" || password === \"\") {\n      this.setState({\n        errorMessage: \"모든항목을 입력해주세요\"\n      })\n    }\n    else {\n      axios({\n        method: 'POST',\n        url: 'https://onemeal.site/users/login',\n        headers: { 'Content-Type': 'application/json' },\n        withCredentials: true,\n        data: { email: email, password: password }\n      })\n      .then(res => res.data)\n      .then(data => {\n        this.setState({\n          username: data.username\n        });\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n\n  render() {\n\n    const responseGoogle = (any) => {\n\n    }\n    return (\n      this.state.showSignupView ?\n        <Signup handleSignupView={this.handleSignupView} loginModalHandler={this.props.loginModalHandler} /> :\n        <div className=\"back\">\n          <div className='loginContainer'>\n            <img className='X' src={x} onClick={this.props.loginModalHandler} />\n            <div className=\"middleContainer\">\n              <img className=\"go\" src={logo} alt=\"go\" />\n              <div className='block1' />\n              <input\n                className=\"inputBox\"\n                name='email'\n                onChange={(e) => this.handleInputValue(e)}\n                placeholder='이메일'\n                type='text' />\n              <div className='block' />\n              <input\n                className=\"inputBox\"\n                name='password'\n                onChange={(e) => this.handleInputValue(e)}\n                placeholder='비밀번호'\n                type='password' />\n              <div className='block' />\n              <button className=\"button\" onClick={this.loginRequestHandler}>로그인</button>\n              <div className='block' />\n              <div className=\"alert-box\">{this.state.errorMessage}</div>\n              <div className='block' />\n              <span className=\"text\">\n                아직 아이디가 없으신가요?\n              <span className='text2' onClick={this.handleSignupView}>회원가입</span>\n              </span>\n              <div className='block' />\n              <div>\n                <img className=\"github\" src={github} alt=\"github\" onClick={this.githubLoginHandler} />  <img className=\"google\" src={google} alt=\"google\" />\n              </div>\n            </div>\n            <div className=\"ex\">2021 Baegopujo all rights reserved.</div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withRouter(Signin)","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/intro.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/signup.js",["86","87"],"import React, { Component } from 'react'\nimport logo from './img2/logo.png'\nimport x from './img2/X.png'\nimport {Link , withRouter} from 'react-router-dom'\nimport axios from 'axios'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      userName: \"\",\n      password: \"\",\n      checkPassword: \"\",\n      errorMessage: \"\"\n    }\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.signupRequestHandler = this.signupRequestHandler.bind(this);\n  }\n\n  handleInputValue(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  signupRequestHandler() {\n    const {email, username, password, checkPassword} = this.state;\n    if(!email || !username || !password || !checkPassword) {\n      this.setState({ errorMessage: '모든 항목을 입력해주세요' });\n    }\n    else {\n      axios({\n        method: 'POST',\n        url: 'https://onemeal.site/users/signup',\n        headers: { 'Content-Type': 'application/json' },\n        withCredentials: true,\n        data: { email: email, username: username, password: password }\n      })\n      .then(res => {\n        console.log(res.data);\n        this.props.handleSignupView();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"back\">\n        <div className='loginContainer'>\n        <img className='X' src={x} onClick={this.props.loginModalHandler}/>\n          <div className=\"middleContainer\">\n            <img className=\"go\" src={logo} alt=\"go\" />\n            <input\n              className=\"inputBox\"\n              name='email'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='이메일'\n              type='text' />\n            <div className='block' />\n            <input\n              className=\"inputBox\"\n              name='username'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='이름'\n              type='text' />\n            <div className='block' />\n            <input\n              className=\"inputBox\"\n              name='password'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='비밀번호'\n              type='password' />\n            <div className='block' />\n            <input\n              className=\"inputBox\"\n              name='checkPassword'\n              onChange={(e) => this.handleInputValue(e)}\n              placeholder='비밀번호 확인'\n              type='password' />\n            <div className='block' />\n            <button className=\"button\" onClick={this.signupRequestHandler}>회원가입</button>\n            <div className='block' />\n            <div className=\"alert-box\">{this.state.errorMessage}</div>\n            <div className='block' />\n            <span className=\"text\">\n              아이디가 있으신가요?\n              <span className=\"text2\" onClick={this.props.handleSignupView}>로그인</span>\n            </span>\n            <div className='block' />\n          </div>\n          <div className=\"ex\">2021 Baegopujo all rights reserved.</div>\n        </div>\n      </div >\n    )\n  }\n}\n\n\nexport default withRouter(Signup)","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main.js",["88"],"import React, { Component } from 'react'\nimport MainHeader from './main-header'\nimport MainIngre from './main-ingredients'\nimport Chef from './main-chef'\nimport axios from 'axios'\nimport Signin from '../user/signin'\nimport Result from '../user/result'\n\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chefsMessage: null,\n      isLogin: false,  /* 로그인 여부 판별 */\n      isLoginModalOpen: false,  /* 로그인 모달창이 열렸는지 여부 판별 */\n      username: null  /* 로그인 했을 시 사용자 이름 */,\n      githubToken: \"\"\n    }\n    this.getOneMeal = this.getOneMeal.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n    this.loginModalHandler = this.loginModalHandler.bind(this);\n    this.getGithubToken = this.getGithubToken.bind(this)\n  }\n\n  async getGithubToken(authorizationCode) {\n    const result = await axios.post(\"https://onemeal.site/githubLogin\", { authorizationCode }, { withCredentials: true })\n    this.setState({\n      isLogin: true,\n      githubToken: result.data.accessToken\n    })\n  }\n\n\n  componentDidMount() {\n    const url = new URL(window.location.href)\n    const authorizationCode = url.searchParams.get('code')\n    if (authorizationCode) {\n      this.getGithubToken(authorizationCode)\n    }\n  }\n\n\n  /* 셰프에게 추천받기 버튼 서버통신 함수 */\n  getOneMeal() {\n    axios({\n      method: 'get',\n      url: 'https://onemeal.site/',\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true\n    })\n      .then(res => {\n        console.log(res)\n      })\n  }\n\n  /* 로그인 상태 변경 함수 */\n  loginHandler(username) {\n    this.setState({\n      isLoginModalOpen: false,\n      isLogin: true,\n      username: username\n    });\n  }\n\n  /* 로그인창 열고닫는 함수 */\n  loginModalHandler() {\n    this.setState({ isLoginModalOpen: !this.state.isLoginModalOpen });\n  }\n\n\n  render() {\n    const { chefsMessage, isLogin, isLoginModalOpen, username } = this.state;\n    return (\n      <div className='main-wrap'>\n        <Chef chefsMessage={chefsMessage} />\n        <div className='main-main'>\n          <MainHeader isLogin={isLogin} username={username} loginModalHandler={this.loginModalHandler} />\n          <MainIngre />\n          <button className='main-submit' onClick={this.getOneMeal}>셰프에게 추천받기</button>\n        </div>\n        {isLoginModalOpen ? <Signin loginHandler={this.loginHandler} loginModalHandler={this.loginModalHandler} /> : null}\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Main;\n","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-ingredients.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-header.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/main-chef.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/main/openning.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/result.js",["89","90"],"import React, { Component } from 'react'\n\nimport x from './img2/X.png'\nimport { Link, withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nclass Result extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            foodName: \"\",\n            foodImg: \"\"\n\n        }\n        this.signupRequestHandler = this.signupRequestHandler.bind(this);\n    }\n\n  \n\n    signupRequestHandler() {\n\n        axios({\n            method: 'GET',\n            url: 'https://onemeal.site/resultrecipe',\n            headers: { 'Content-Type': 'application/json' },\n            withCredentials: true,\n            data: { foodName: this.foodName, foodImg: this.foodImg }\n        })\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n\n    render() {\n        return (\n            <div className=\"back\">\n                <div className='loginContainer'>\n                    <img className='X' src={x} onClick={this.props.loginModalHandler} />\n                    <div className=\"middleContainer\">\n                        <div className=\"title\">셰프의 선택은</div>\n                        <div className=\"resultName\">계란 볶음밥</div>\n                        <div className=\"resultImg\" />\n                        <div className=\"save\">저장하기</div>\n                        <div className='block' />\n                        <div className=\"goMyPage\">마이페이지 에서 확인하세요!</div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\n\nexport default withRouter(Result)\n\n\n      ","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mypage.js",[],"/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/myinfo.js",["91","92"],"import React, { Component } from 'react'\nimport axios from 'axios'\n\nfunction MyInfo(props) {\n  return(\n    <aside className='my-info-container'>\n      <div className='my-pic'></div>\n      <div className='my-name'></div>\n      <div className='my-email'></div>\n      <div className='my-password'></div>\n    </aside>\n  );\n}\n\nexport default MyInfo;","/Users/kimtaesu/Desktop/Lonelyonemeal-client/src/components/user/mymenu.js",["93"],"import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass MyMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return(\n      <div></div>\n    );\n  }\n}\n\nexport default MyMenu;",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":15,"column":33,"nodeType":"100","messageId":"101","endLine":15,"endColumn":54},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"107","line":9,"column":10,"nodeType":"104","messageId":"105","endLine":9,"endColumn":21},{"ruleId":"102","severity":1,"message":"108","line":75,"column":11,"nodeType":"104","messageId":"105","endLine":75,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":83,"column":13,"nodeType":"111","endLine":83,"endColumn":81},{"ruleId":"102","severity":1,"message":"106","line":4,"column":9,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":53,"column":9,"nodeType":"111","endLine":53,"endColumn":76},{"ruleId":"102","severity":1,"message":"112","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":42,"column":21,"nodeType":"111","endLine":42,"endColumn":89},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"113","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":13},{"ruleId":"102","severity":1,"message":"113","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":13},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-self-assign","'this.handleInputValue' is assigned to itself.","MemberExpression","selfAssignment","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'GoogleLogin' is defined but never used.","'responseGoogle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Result' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]